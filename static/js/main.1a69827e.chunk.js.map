{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["arr","App","props","handleUploadClick","event","preventDefault","file","target","files","reader","FileReader","states","readAsDataURL","isInitial","state","mainState","forEach","ele","push","onloadend","setTimeout","setState","selectedFile","concat","result","imageResetHandler","idx","map","index","sort","reverse","selected","filter","classes","this","Card","CardContent","Grid","container","justify","alignItems","accept","className","input","id","multiple","type","onChange","htmlFor","Fab","component","button","card","direction","item","width","content","src","Button","variant","onClick","e","root","spacing","renderInitialState","renderUploadedState","React","Component","withStyles","theme","backgroundColor","palette","background","paper","display","justifyContent","marginTop","color","blue","margin","maxWidth","maxHeight","withTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a69827e.chunk.js","sourcesContent":["import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n\troot: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"flex-end\",\n\t\tmarginTop: 30\n\t},\n\tinput: {\n\t\tdisplay: \"none\"\n\t},\n\tbutton: {\n\t\tcolor: blue[900],\n\t\tmargin: 10\n\t},\n\tcard: {\n\t\tmaxWidth: 500,\n\t\tmaxHeight: 500,\n\t},\n\tcontent: {\n\t\tmaxWidth: 300,\n\t\tmaxHeight: 300,\n\t}\n});\n\nconst arr = [1, 2, 3, 4, 5, 6];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmainState: arr.map(() => 'initial'),\n\t\t\tselectedFile: []\n\t\t};\n\t}\n\n\thandleUploadClick = event => {\n\t\tevent.preventDefault();\n\t\tconst file = event.target.files[0];\n\t\tconst reader = new FileReader();\n\t\tconst url = reader.readAsDataURL(file);\n\t\tconst states = [];\n\t\tlet isInitial = true;\n\t\tthis.state.mainState.forEach((ele) => {\n\t\t\tif (ele === 'initial' && isInitial) {\n\t\t\t\tstates.push('uploaded');\n\t\t\t\tisInitial = false;\n\t\t\t} else {\n\t\t\t\tstates.push(ele);\n\t\t\t}\n\t\t});\n\t\treader.onloadend = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmainState: states,\n\t\t\t\t\tselectedFile: this.state.selectedFile.concat(reader.result)\n\t\t\t\t})\n\t\t\t}, 500);\n\t\t}\n\t};\n\n\n\trenderInitialState() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\tid=\"contained-button-file\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tonChange={this.handleUploadClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor=\"contained-button-file\">\n\t\t\t\t\t\t\t\t<Fab component=\"span\" className={classes.button}>\n\t\t\t\t\t\t\t\t\t<AddPhotoAlternateIcon />\n\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</>\n\t\t);\n\t}\n\n\trenderUploadedState(index) {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\tclassName={classes.content}\n\t\t\t\t\t\t\t\t\tsrc={this.state.selectedFile[index]}\n\t\t\t\t\t\t\t\t/></Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={(e) => this.imageResetHandler(index, e)}>Delete</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</>\n\t\t);\n\t}\n\n\timageResetHandler = (idx, event) => {\n\t\tevent.preventDefault();\n\t\tconst states = this.state.mainState.map((ele, index) => idx === index ? 'initial' : ele).sort().reverse();\n\t\tconst selected = this.state.selectedFile.filter((ele, index) => idx !== index);\n\t\tthis.setState({\n\t\t\tmainState: states,\n\t\t\tselectedFile: selected,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Grid container spacing={10} justify=\"center\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.mainState.map((mainState, index) => {\n\t\t\t\t\t\t\t\treturn mainState === 'initial'\n\t\t\t\t\t\t\t\t\t? (<Grid item>{this.renderInitialState(index)}</Grid>)\n\t\t\t\t\t\t\t\t\t: this.renderUploadedState(index)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles, { withTheme: true })(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}